;
; File generated by cc65 v 2.16 - Ubuntu 2.16-2
;
	.fopt		compiler,"cc65 v 2.16 - Ubuntu 2.16-2"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_rand
	.import		__randomize
	.import		_memcpy
	.import		_clrscr
	.export		_spriteData
	.export		_possibleColors
	.export		_main

.segment	"DATA"

_spriteData:
	.byte	$1F
	.byte	$FF
	.byte	$F8
	.byte	$1F
	.byte	$FF
	.byte	$FC
	.byte	$00
	.byte	$0F
	.byte	$FC
	.byte	$3E
	.byte	$07
	.byte	$FC
	.byte	$3E
	.byte	$03
	.byte	$FE
	.byte	$7C
	.byte	$03
	.byte	$DE
	.byte	$7C
	.byte	$07
	.byte	$9E
	.byte	$7C
	.byte	$0F
	.byte	$9F
	.byte	$7C
	.byte	$3F
	.byte	$0F
	.byte	$7F
	.byte	$FC
	.byte	$0F
	.byte	$FF
	.byte	$F0
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$03
	.byte	$FF
	.byte	$FF
	.byte	$3F
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$E0
	.byte	$FF
	.byte	$FF
	.byte	$E0
	.byte	$3F
	.byte	$FF
	.byte	$FF
	.byte	$03
	.byte	$FF
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$07
	.byte	$FF
	.byte	$F8
	.byte	$0F
	.byte	$FF
	.byte	$FC
	.byte	$1F
	.byte	$00
	.byte	$7E
	.byte	$3E
	.byte	$00
	.byte	$3F
	.byte	$3C
	.byte	$F8
	.byte	$1F
	.byte	$78
	.byte	$F8
	.byte	$1F
	.byte	$F0
	.byte	$F0
	.byte	$3E
	.byte	$F1
	.byte	$F0
	.byte	$3E
	.byte	$E1
	.byte	$F0
	.byte	$FC
	.byte	$C1
	.byte	$FF
	.byte	$F0
	.byte	$81
	.byte	$FF
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$80
	.byte	$FF
	.byte	$FF
	.byte	$FC
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$07
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FC
	.byte	$FF
	.byte	$FF
	.byte	$80
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
_possibleColors:
	.byte	$06
	.byte	$03
	.byte	$04
	.byte	$05
	.byte	$02
	.byte	$07
	.byte	$08
	.byte	$0A
	.byte	$0D
	.byte	$0E

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	ldx     #$D0
	lda     #$00
	jsr     pushax
	lda     #$A0
	jsr     pusha0
	lda     #$8C
	jsr     pusha
	jsr     decsp3
	jsr     push0
	jsr     pusha
	jsr     __randomize
	jsr     _rand
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     tosmoda0
	stx     tmp1
	ora     tmp1
	beq     L0095
	ldx     #$00
	lda     #$01
	jmp     L0097
L0095:	ldx     #$FF
	txa
L0097:	ldy     #$04
	jsr     staxysp
	jsr     _rand
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     tosmoda0
	stx     tmp1
	ora     tmp1
	beq     L009C
	lda     #$01
	jmp     L016C
L009C:	lda     #$FF
L016C:	ldy     #$03
	sta     (sp),y
	jsr     _clrscr
	lda     #$00
	sta     $D021
	ldy     #$0A
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$15
	lda     #$03
	sta     (ptr1),y
	lda     #$C0
	sta     $07F8
	lda     #$C1
	sta     $07F9
	ldy     #$0A
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$27
	lda     #$06
	sta     (ptr1),y
	ldy     #$0A
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$28
	lda     #$06
	sta     (ptr1),y
	ldx     #$30
	lda     #$00
	jsr     pushax
	lda     #<(_spriteData)
	ldx     #>(_spriteData)
	jsr     pushax
	ldx     #$00
	lda     #$80
	jsr     _memcpy
L00CA:	ldy     #$02
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$01
	bcc     L00CC
	inx
L00CC:	jsr     staxysp
	jsr     pushax
	lda     #$1E
	jsr     tosumoda0
	ldy     #$01
	jsr     staxysp
	ldy     #$02
	lda     (sp),y
	dey
	ora     (sp),y
	bne     L00CA
	ldy     #$04
	lda     (sp),y
	ldy     #$07
	clc
	adc     (sp),y
	sta     (sp),y
	ldy     #$05
	lda     (sp),y
	ldy     #$08
	adc     (sp),y
	sta     (sp),y
	ldy     #$03
	lda     (sp),y
	ldy     #$06
	clc
	adc     (sp),y
	sta     (sp),y
	ldy     #$03
	lda     (sp),y
	cmp     #$01
	bne     L00D5
	ldy     #$06
	lda     (sp),y
	cmp     #$E6
	jne     L00F7
	lda     #$FF
	jmp     L01CE
L00D5:	ldy     #$06
	lda     (sp),y
	cmp     #$32
	bne     L00F7
	lda     #$01
L01CE:	ldy     #$03
	sta     (sp),y
	ldy     #$08
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$00
	cmp     #$1C
	txa
	sbc     #$00
	bcc     L016E
	ldy     #$08
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$00
	cmp     #$25
	txa
	sbc     #$01
	bcc     L00F7
L016E:	lda     (sp),y
	clc
	adc     #$01
	sta     (sp),y
	lda     (sp),y
	jsr     pusha0
	lda     #$0A
	jsr     tosumoda0
	ldy     #$00
	sta     (sp),y
	ldy     #$0A
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$27
	bcc     L0101
	inx
L0101:	jsr     pushax
	ldy     #$02
	lda     (sp),y
	tay
	lda     _possibleColors,y
	ldy     #$00
	jsr     staspidx
	ldy     #$0A
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$28
	bcc     L0109
	inx
L0109:	jsr     pushax
	ldy     #$02
	lda     (sp),y
	tay
	lda     _possibleColors,y
	ldy     #$00
	jsr     staspidx
L00F7:	ldy     #$05
	lda     (sp),y
	bne     L010E
	dey
	lda     (sp),y
	cmp     #$01
	bne     L010E
	ldy     #$08
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     push0ax
	ldx     #$01
	lda     #$28
	jsr     toseqeax
	jeq     L0131
	ldy     #$04
	lda     #$FF
	sta     (sp),y
	jmp     L01C8
L010E:	ldy     #$08
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     push0ax
	ldx     #$00
	lda     #$18
	jsr     toseqeax
	beq     L0131
	ldy     #$04
	lda     #$01
	sta     (sp),y
	lda     #$00
L01C8:	iny
	sta     (sp),y
	iny
	lda     (sp),y
	cmp     #$36
	bcc     L0170
	cmp     #$E3
	bcc     L0131
L0170:	ldy     #$00
	lda     (sp),y
	clc
	adc     #$01
	sta     (sp),y
	lda     (sp),y
	jsr     pusha0
	lda     #$0A
	jsr     tosumoda0
	ldy     #$00
	sta     (sp),y
	ldy     #$0A
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$27
	bcc     L013B
	inx
L013B:	jsr     pushax
	ldy     #$02
	lda     (sp),y
	tay
	lda     _possibleColors,y
	ldy     #$00
	jsr     staspidx
	ldy     #$0A
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$28
	bcc     L0143
	inx
L0143:	jsr     pushax
	ldy     #$02
	lda     (sp),y
	tay
	lda     _possibleColors,y
	ldy     #$00
	jsr     staspidx
L0131:	ldy     #$0A
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$07
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	ldy     #$0A
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$06
	lda     (sp),y
	ldy     #$01
	sta     (ptr1),y
	ldy     #$0A
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$02
	bcc     L0156
	inx
L0156:	sta     ptr1
	stx     ptr1+1
	ldy     #$07
	lda     (sp),y
	clc
	adc     #$18
	ldy     #$00
	sta     (ptr1),y
	ldy     #$0A
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$06
	lda     (sp),y
	ldy     #$03
	sta     (ptr1),y
	ldy     #$0A
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$10
	bcc     L0164
	inx
L0164:	sta     sreg
	stx     sreg+1
	dey
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$00
	txa
	sbc     #$01
	lda     #$00
	rol     a
	sta     ptr1
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$E8
	txa
	sbc     #$00
	lda     #$00
	rol     a
	asl     a
	ora     ptr1
	ldy     #$00
	sta     (sreg),y
	jmp     L00CA

.endproc

