?start			: stmts
?stmts			: stmt+				-> _stmts
?stmt			: expr ";"
				| print_stmt ";"
?expr			: sum
				| assignment
				| comparision

?assignment 	: abs_assign
				| pluseq
				| mineq
				| timeseq
				| diveq
abs_assign 		: ident "="  expr	-> _abs_assign
pluseq			: ident "+=" expr	-> _pluseq
mineq			: ident "-=" expr	-> _mineq
timeseq			: ident "*=" expr	-> _timeseq
diveq			: ident "/=" expr	-> _diveq

?comparision	: eq
				| ne
				| gt
				| lt
				| ge
				| le
eq				: expr "==" expr	-> _eq
ne				: expr "!=" expr	-> _ne
gt				: expr ">"	expr	-> _gt
lt				: expr "<"	expr	-> _lt
ge				: expr ">=" expr	-> _ge
le				: expr "<=" expr	-> _le
?print_stmt		: "print" expr		-> _print_stmt
?sum			: product
				| sum "+" product	-> _add
				| sum "-" product	-> _sub
?product		: atom
				| product "*" atom	-> _mul
				| product "/" atom	-> _div
				| product "%" atom	-> _mod
?atom			: NUMBER			-> _number
				| "-" atom			-> _neg
				| ident				-> _var
				| "(" expr ")"
				| STRING			-> _string
?ident			: NAME				-> _ident

%import common.CNAME				-> NAME
%import common.NUMBER
%import common.ESCAPED_STRING		-> STRING
%import common.WS_INLINE

%ignore WS_INLINE
